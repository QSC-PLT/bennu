define(["nu/stream","parse/parse"],function(e,b){var i=b.always(e.end),g=b.optional.bind(void 0,e.end),h=function(e,a){return 0>=e?i:b.cons(a,h(e-1,a))},n=function a(c,d){return 0>=c?i:g(b.cons(d,a(c-1,d)))},f=function(a,c){return b.bind(a,function(a){return b.next(c,b.always(a))})},j=function(a,c){return b.cons(c,b.many(b.next(a,c)))},k=function(a,c){return b.rec(function(d){return b.cons(c,g(b.next(a,g(d))))})},l=function(a,c){return b.bind(c,b.rec(function(d){return function(e){return b.optional(e,
b.bind(a,function(a){return b.bind(c,function(b){return d(a(e,b))})}))}}))},m=function(a,c){return b.rec(function(d){return b.bind(c,function(c){return b.optional(c,b.bind(a,function(a){return b.bind(d,function(d){return b.always(a(c,d))})}))})})};return{times:h,betweenTimes:function(a,c,d){if(c<a)throw new b.ParserError("between max < min");return b.append(h(a,d),n(c-a,d))},then:f,between:function(a,c,d){return b.next(a,f(d,c))},sepBy1:j,sepBy:function(a,c){return b.optional(e.end,j(a,c))},sepEndBy1:k,
sepEndBy:function(a,c){return b.either(k(a,c),b.next(b.optional(null,a),b.always(e.end)))},endBy1:function(a,c){return b.many1(f(c,a))},endBy:function(a,c){return b.many(f(c,a))},chainl1:l,chainl:function(a,c,d){return b.optional(c,l(a,d))},chainr1:m,chainr:function(a,c,d){return b.optional(c,m(a,d))}}});
