define(["parse/parse"],function(a){var h=Array.prototype.map,i=Array.prototype.reduce,b=RegExp.prototype.test,e=function(c){return a.token(function(a){return c.toString()===a.toString()})},j=function(c,a){return c[a]=c[a]||{}},k=function(a,b){i.call(b,j,a)[""]=null;return a},g=function(c,b){var f=[],d;for(d in c)1===d.length&&f.push(a.attempt(a.next(e(d),g(c[d],b+d))));c.hasOwnProperty("")&&f.push(a.always(b));return a.choice.apply(void 0,f)},l=a.token(b.bind(/^.$/)),m=a.token(b.bind(/^[a-z]$/i)),
n=a.token(b.bind(/^\s$/i)),b=a.token(b.bind(/^[0-9]$/i));return{character:e,string:function(c){return h.call(c,e).concat(a.always(c)).reduce(a.next)},trie:function(a){return g(a.reduce(k,{}),"")},anyChar:l,letter:m,space:n,digit:b}});
