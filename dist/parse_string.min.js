define(["parse/parse"],function(a){var i=Array.prototype.reduce,c=RegExp.prototype.test,f=function(b,a){return b.toString()===a.toString()},g=function(b){return a.character(b,f)},j=function(b,a){return b[a]=b[a]||{}},k=function(b,a){i.call(a,j,b)[""]=null;return b},h=function(b,c){var e=[],d;for(d in b)1===d.length&&e.push(a.attempt(a.next(g(d),h(b[d],c+d))));b.hasOwnProperty("")&&e.push(a.always(c));return a.choice.apply(void 0,e)},l=a.token(c.bind(/^.$/)),m=a.token(c.bind(/^[a-z]$/i)),n=a.token(c.bind(/^\s$/i)),
c=a.token(c.bind(/^[0-9]$/i));return{character:g,string:function(b){return a.string(b,f)},trie:function(a){return h(a.reduce(k,{}),"")},anyChar:l,letter:m,space:n,digit:c}});
