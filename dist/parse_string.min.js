define(["parse/parse","nu/stream"],function(a){var h=Function.prototype.call.bind(Array.prototype.reduce),c=RegExp.prototype.test,i=function(a,b){return a.valueOf()===b.valueOf()},e=function(f){return function(b,d){return new a.ExpectError(b,f,null===d?"end of input":d)}},j=function(f){return a.token(i.bind(void 0,f),e(f))},k=function(f,b,d,c){return 0===b.length?a.always(f):a.next(a.token(i.bind(void 0,b[0]),function(b,g){return new a.ExpectError(c,f,null===g?d:d+g)}),k(f,b.slice(1),d+b[0],c))},
l=function(a,b){a[b]=a[b]||{};return a[b]},m=function(a,b){h(b,l,a)[""]=null;return a},n=function b(d,c){var e=[];Object.keys(d).forEach(function(g){1===g.length&&e.push(a.next(j(g),b(d[g],c+g)))});d.hasOwnProperty("")&&e.push(a.always(c));return a.choice.apply(void 0,e)},p=a.Parser("Any Character",a.token(c.bind(/^.$/),e("any character"))),q=a.Parser("Any Letter",a.token(c.bind(/^[a-z]$/i),e("any letter character"))),r=a.Parser("Any Whitespace",a.token(c.bind(/^\s$/i),e("any space character"))),
c=a.Parser("Any Digit",a.token(c.bind(/^[0-9]$/i),e("any digit character")));return{character:j,string:function(b){return a.bind(a.getPosition(),function(c){return a.attempt(k(b,b,"",c))})},trie:function(b){return a.attempt(n(h(b,m,{}),""))},anyChar:p,letter:q,space:r,digit:c}});
