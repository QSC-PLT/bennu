define(["parse/parse","nu/stream"],function(a){var g=Function.prototype.call.bind(Array.prototype.reduce),c=RegExp.prototype.test,h=function(b,a){return b.valueOf()===a.valueOf()},f=function(b){return function(d,e){return new a.ExpectError(d,b,null===e?"end of input":e)}},i=function(b){return a.token(h.bind(void 0,b),f(b))},k=function(b,d,e,j){return 0===d.length?a.always(b):a.next(a.token(h.bind(void 0,d[0]),function(d,c){return new a.ExpectError(j,b,null===c?e:e+c)}),k(b,d.slice(1),e+d[0],j))},
l=function(b,a){return b[a]=b[a]||{}},m=function(a,d){g(d,l,a)[""]=null;return a},n=function(b,d){var e=[];Object.keys(b).forEach(function(c){1===c.length&&e.push(a.next(i(c),_trie(b[c],d+c)))});b.hasOwnProperty("")&&e.push(a.always(d));return a.choice.apply(void 0,e)},p=a.Parser("Any Character",a.token(c.bind(/^.$/),f("any character"))),q=a.Parser("Any Letter",a.token(c.bind(/^[a-z]$/i),f("any letter character"))),r=a.Parser("Any Whitespace",a.token(c.bind(/^\s$/i),f("any space character"))),c=a.Parser("Any Digit",
a.token(c.bind(/^[0-9]$/i),f("any digit character")));return{character:i,string:function(b){return a.bind(a.getPosition(),function(c){return a.attempt(k(b,b,"",c))})},trie:function(b){return a.attempt(n(g(b,m,{}),""))},anyChar:p,letter:q,space:r,digit:c}});
