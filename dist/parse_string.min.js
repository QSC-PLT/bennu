define(["parse/parse"],function(a){function f(b,g){var c=[],d;for(d in b)1===d.length&&c.push(a.c(a.next(e(d),f(b[d],g+d))));b.hasOwnProperty("")&&c.push(a.b(g));return a.d.apply(void 0,c)}function h(b,a){i.call(a,j,b)[""]=null;return b}function j(b,a){return b[a]=b[a]||{}}function e(b){return a.a(function(a){return b.toString()===a.toString()})}var k=Array.prototype.map,i=Array.prototype.reduce,c=RegExp.prototype.test,l=a.a(c.bind(/^.$/)),m=a.a(c.bind(/^[a-z]$/i)),n=a.a(c.bind(/^\s$/i)),c=a.a(c.bind(/^[0-9]$/i));
return{character:e,string:function(b){return k.call(b,e).concat(a.b(b)).reduce(a.next)},trie:function(a){return f(a.reduce(h,{}),"")},anyChar:l,letter:m,space:n,digit:c}});
